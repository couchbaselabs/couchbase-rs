name: Build

on:
  pull_request:       # trigger on pull requests
  push:
    branches: # array of glob patterns matching against refs/heads. Optional; defaults to all
      - main

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-pc-windows-msvc ]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Rust Toolchain Target
        run: |
          echo "targets = ['${{matrix.target}}']" >> rust-toolchain.toml

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.4.3
        with:
          target: ${{ matrix.target }}

      - name: Install aarch64-linux gcc
        run: sudo apt-get update && sudo apt-get install gcc-aarch64-linux-gnu -y
        if: matrix.target == 'aarch64-unknown-linux-gnu'

      - name: Build
        uses: actions-rs/cargo@v1
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: 'aarch64-linux-gnu-gcc'
        with:
          command: build
          args: --verbose --target ${{ matrix.target }}
        if: matrix.os == 'ubuntu-latest'

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target ${{ matrix.target }}
        if: matrix.os == 'macos-latest'

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target ${{ matrix.target }}
        env:
          VCPKGRS_DYNAMIC: 1
        if: matrix.os == 'windows-latest'
